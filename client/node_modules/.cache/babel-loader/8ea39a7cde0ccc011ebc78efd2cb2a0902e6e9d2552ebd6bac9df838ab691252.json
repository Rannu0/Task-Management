{"ast":null,"code":"var _jsxFileName = \"/Users/noemie/Documents/Udemy Full Stack Course/Personal_Projects/To_Do_List/client/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from \"./Header\";\nimport Checklist from \"./checklist/Checklist\";\nimport RightPart from \"./Right_part\";\nimport ArchiveList from \"./archive_list/ArchiveList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // store users' todo tasks and checked tasks\n  const [tasks, setTasks] = useState([]);\n  const [archiveTasks, setArchivedTasks] = useState([\"checked1\", \"checked2\", \"checked3\"]);\n  useEffect(() => {\n    // Make API request to fetch data from the server\n    Axios.get(\"http://localhost:3000/\").then(res => {\n      const {\n        taskCreated\n      } = res.data;\n      const taskNames = taskCreated.map(task => task.name); // Extracting \"name\" values\n      setTasks(taskNames);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); // Empty dependency array ensures the effect runs once on component mount\n\n  // add new task to the original tasks list\n  const addTask = newTask => {\n    console.log(\"React: user submitted a new task: \" + newTask);\n\n    // Make API request to send data back to the server\n    Axios.post(\"http://localhost:3000/submit\", {\n      task: newTask\n    }).then(res => {\n      // If the server successfully processes the request, update the state\n      setTasks([...tasks, newTask]);\n    }).catch(error => {\n      console.error(\"Error adding task:\", error);\n    });\n  };\n\n  // Update deleteTask function\n  const deleteTask = checkedTask => {\n    // Make API request to delete task from the server\n    Axios.delete(`http://localhost:3000/delete/${checkedTask}`).then(res => {\n      // If the server successfully processes the request, update the state\n      const updatedTasks = tasks.filter(task => task !== checkedTask);\n      setTasks(updatedTasks);\n    }).catch(error => {\n      console.error(\"Error deleting task:\", error);\n    });\n  };\n\n  // Update archiveTask function\n  const archiveTask = archivedTask => {\n    // Make API request to archive task on the server\n    Axios.post(\"http://localhost:3000/archive\", {\n      task: archivedTask\n    }).then(res => {\n      // If the server successfully processes the request, update the state\n      deleteTask(archivedTask); // Remove task from the main tasks list\n      setArchivedTasks([...archiveTasks, archivedTask]); // Add task to the archive tasks list\n    }).catch(error => {\n      console.error(\"Error archiving task:\", error);\n    });\n  };\n  const unarchiveTask = unarchiveTask => {\n    addTask(unarchiveTask);\n    const updatedTasks = archiveTasks.filter(task => task !== unarchiveTask);\n    setArchivedTasks(updatedTasks);\n  };\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container row align-items-md-baseline\",\n      children: [/*#__PURE__*/_jsxDEV(Checklist, {\n        tasks: tasks,\n        addTask: addTask,\n        deleteTask: deleteTask,\n        archiveTask: archiveTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightPart, {\n        archiveTasks: archiveTasks,\n        unarchiveTask: unarchiveTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"445IiplWlcN9ItGsU8Jn0ZMJaKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Axios","Header","Checklist","RightPart","ArchiveList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","archiveTasks","setArchivedTasks","get","then","res","taskCreated","data","taskNames","map","task","name","catch","error","console","addTask","newTask","log","post","deleteTask","checkedTask","delete","updatedTasks","filter","archiveTask","archivedTask","unarchiveTask","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/noemie/Documents/Udemy Full Stack Course/Personal_Projects/To_Do_List/client/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from \"./Header\";\nimport Checklist from \"./checklist/Checklist\";\nimport RightPart from \"./Right_part\";\nimport ArchiveList from \"./archive_list/ArchiveList\";\n\nconst App = () => {\n  // store users' todo tasks and checked tasks\n  const [tasks, setTasks] = useState([]);\n  const [archiveTasks, setArchivedTasks] = useState([\n    \"checked1\",\n    \"checked2\",\n    \"checked3\",\n  ]);\n\n  useEffect(() => {\n    // Make API request to fetch data from the server\n    Axios.get(\"http://localhost:3000/\")\n      .then((res) => {\n        const { taskCreated } = res.data;\n        const taskNames = taskCreated.map((task) => task.name); // Extracting \"name\" values\n        setTasks(taskNames);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n    }, []); // Empty dependency array ensures the effect runs once on component mount\n\n  \n\n  // add new task to the original tasks list\n  const addTask = (newTask) => {\n    console.log(\"React: user submitted a new task: \" + newTask);\n\n    // Make API request to send data back to the server\n    Axios.post(\"http://localhost:3000/submit\", { task: newTask })\n      .then((res) => {\n        // If the server successfully processes the request, update the state\n        setTasks([...tasks, newTask]);\n      })\n      .catch((error) => {\n        console.error(\"Error adding task:\", error);\n      });\n  };\n\n  // Update deleteTask function\n  const deleteTask = (checkedTask) => {\n    // Make API request to delete task from the server\n    Axios.delete(`http://localhost:3000/delete/${checkedTask}`)\n      .then((res) => {\n        // If the server successfully processes the request, update the state\n        const updatedTasks = tasks.filter((task) => task !== checkedTask);\n        setTasks(updatedTasks);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting task:\", error);\n      });\n  };\n\n  // Update archiveTask function\n  const archiveTask = (archivedTask) => {\n    // Make API request to archive task on the server\n    Axios.post(\"http://localhost:3000/archive\", { task: archivedTask })\n      .then((res) => {\n        // If the server successfully processes the request, update the state\n        deleteTask(archivedTask); // Remove task from the main tasks list\n        setArchivedTasks([...archiveTasks, archivedTask]); // Add task to the archive tasks list\n      })\n      .catch((error) => {\n        console.error(\"Error archiving task:\", error);\n      });\n  };\n\n  const unarchiveTask = (unarchiveTask) => {\n    addTask(unarchiveTask);\n    const updatedTasks = archiveTasks.filter((task) => task !== unarchiveTask);\n    setArchivedTasks(updatedTasks);\n  };\n\n  console.log(tasks);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"body-container row align-items-md-baseline\">\n        <Checklist\n          tasks={tasks}\n          addTask={addTask}\n          deleteTask={deleteTask}\n          archiveTask={archiveTask}\n        />\n        <RightPart archiveTasks={archiveTasks} unarchiveTask={unarchiveTask} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}