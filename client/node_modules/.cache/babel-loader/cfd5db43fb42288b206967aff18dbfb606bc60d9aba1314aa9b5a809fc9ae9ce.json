{"ast":null,"code":"var _jsxFileName = \"/Users/noemie/Documents/Udemy Full Stack Course/Personal_Projects/To_Do_List/client/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from \"./Header\";\nimport Checklist from \"./checklist/Checklist\";\nimport RightPart from \"./Right_part\";\nimport ArchiveList from \"./archive_list/ArchiveList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState(\"\");\n  const getData = async () => {\n    const response = await Axios.get(\"http://localhost:3000/\");\n    setData(response.data);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // store users' todo tasks and checked tasks\n  const [tasks, setTasks] = useState([\"first\", \"second\", \"third\", \"fourth\", \"fifth\"]);\n  const [archiveTasks, setArchivedTasks] = useState([\"checked1\", \"checked2\", \"checked3\"]);\n\n  // add new task to the original tasks list\n  const addTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n\n  //delete checked task from the original tasks list\n  const deleteTask = checkedTask => {\n    const updatedTasks = tasks.filter(task => task !== checkedTask);\n    setTasks(updatedTasks);\n  };\n  const archiveTask = archivedTask => {\n    // Remove archived task from the original tasks list\n    deleteTask(archivedTask);\n\n    // Add the archived task to the archive tasks list\n    setArchivedTasks([...archiveTasks, archivedTask]);\n  };\n  const unarchiveTask = unarchiveTask => {\n    addTask(unarchiveTask);\n    const updatedTasks = archiveTasks.filter(task => task !== unarchiveTask);\n    setArchivedTasks(updatedTasks);\n  };\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container row align-items-md-baseline\",\n      children: [/*#__PURE__*/_jsxDEV(Checklist, {\n        tasks: tasks,\n        addTask: addTask,\n        deleteTask: deleteTask,\n        archiveTask: archiveTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RightPart, {\n        archiveTasks: archiveTasks,\n        unarchiveTask: unarchiveTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6rhUtG0qPOkP9yHRi0noMt9lgr0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Axios","Header","Checklist","RightPart","ArchiveList","jsxDEV","_jsxDEV","App","_s","data","setData","getData","response","get","tasks","setTasks","archiveTasks","setArchivedTasks","addTask","newTask","deleteTask","checkedTask","updatedTasks","filter","task","archiveTask","archivedTask","unarchiveTask","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/noemie/Documents/Udemy Full Stack Course/Personal_Projects/To_Do_List/client/src/components/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport Header from \"./Header\";\nimport Checklist from \"./checklist/Checklist\";\nimport RightPart from \"./Right_part\";\nimport ArchiveList from \"./archive_list/ArchiveList\";\n\nconst App = () => {\n  const [data, setData] = useState(\"\");\n\n  const getData = async () => {\n    const response = await Axios.get(\"http://localhost:3000/\");\n    setData(response.data);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // store users' todo tasks and checked tasks\n  const [tasks, setTasks] = useState([\n    \"first\",\n    \"second\",\n    \"third\",\n    \"fourth\",\n    \"fifth\",\n  ]);\n  const [archiveTasks, setArchivedTasks] = useState([\n    \"checked1\",\n    \"checked2\",\n    \"checked3\",\n  ]);\n\n  // add new task to the original tasks list\n  const addTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  //delete checked task from the original tasks list\n  const deleteTask = (checkedTask) => {\n    const updatedTasks = tasks.filter((task) => task !== checkedTask);\n    setTasks(updatedTasks);\n  };\n\n  const archiveTask = (archivedTask) => {\n    // Remove archived task from the original tasks list\n   deleteTask(archivedTask);\n\n    // Add the archived task to the archive tasks list\n    setArchivedTasks([...archiveTasks, archivedTask]);\n  };\n\n  const unarchiveTask = (unarchiveTask) => {\n    addTask(unarchiveTask);\n    const updatedTasks = archiveTasks.filter((task) => task !== unarchiveTask);\n    setArchivedTasks(updatedTasks);\n\n  }\n\n  console.log(tasks);\n\n  return (\n    <div>\n      <Header />\n      <div className=\"body-container row align-items-md-baseline\">\n        <Checklist tasks={tasks} addTask={addTask} deleteTask={deleteTask} archiveTask={archiveTask}/>\n        <RightPart archiveTasks={archiveTasks} unarchiveTask={unarchiveTask} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}